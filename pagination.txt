WITH paginacion_data AS (
    SELECT
        CEIL(ContarIncidencias(:P_FILTRAR_USUARIO, :P_FEC_INICIO, :P_FEC_FINAL, :P_ID) / :P_PAGE_SIZE) AS total_pages,
        FLOOR((:P_PAGE_NUMBER - 1) / 10) AS block_number
    FROM dual
),
botones AS (
    -- Botón de bloque anterior
    SELECT
        1 AS button_order,
        'Anterior' AS button_label,
        (block_number * 10) AS target_page,
        'previous' AS button_type
    FROM paginacion_data
    WHERE block_number > 0
    
    UNION ALL
    
    -- Botones numerados
    SELECT
        2 AS button_order,
        TO_CHAR(LEVEL) AS button_label,
        LEVEL AS target_page,
        'page_number' AS button_type
    FROM dual
    CONNECT BY LEVEL BETWEEN ((SELECT block_number FROM paginacion_data) * 10) + 1 AND LEAST(((SELECT block_number FROM paginacion_data) * 10) + 10, (SELECT total_pages FROM paginacion_data))

    UNION ALL
    
    -- Botón de bloque siguiente
    SELECT
        3 AS button_order,
        'Siguiente' AS button_label,
        ((SELECT block_number FROM paginacion_data) * 10) + 11 AS target_page,
        'next' AS button_type
    FROM paginacion_data
    WHERE ((SELECT block_number FROM paginacion_data) * 10) + 10 < (SELECT total_pages FROM paginacion_data)
)
SELECT
    CASE
        WHEN button_type = 'page_number' THEN
            CASE
                WHEN button_label = TO_CHAR(:P_PAGE_NUMBER) THEN '<span class="current-page">' || button_label || '</span>'
                ELSE '<a href="#" onclick="setPageAndRefresh(' || target_page || '); return false;" class="pagination-link">' || button_label || '</a>'
            END
        ELSE
            '<a href="#" onclick="setPageAndRefresh(' || target_page || '); return false;" class="pagination-link">' || button_label || '</a>'
    END AS paginacion_link
FROM botones
ORDER BY button_order, button_label;
