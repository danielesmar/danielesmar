WITH total_registros AS (
    SELECT ContarIncidencias(:P_FILTRAR_USUARIO, :P_FEC_INICIO, :P_FEC_FINAL, :P_ID) AS total_rows FROM dual
),
total_paginas AS (
    SELECT CEIL(total_rows / :P_PAGE_SIZE) AS total_pages FROM total_registros
),
paginacion_data AS (
    SELECT
        ROWNUM AS item_order,
        CASE
            WHEN ROWNUM = 1 AND :P_PAGE_NUMBER > 10 THEN 'Anterior'
            WHEN ROWNUM = 1 THEN NULL
            WHEN ROWNUM = total_pages + 2 AND total_pages > 10 AND :P_PAGE_NUMBER <= total_pages - 10 THEN 'Siguiente'
            WHEN ROWNUM = total_pages + 2 THEN NULL
            ELSE TO_CHAR(ROWNUM - 1)
        END AS button_label,
        CASE
            WHEN ROWNUM = 1 AND :P_PAGE_NUMBER > 10 THEN FLOOR((:P_PAGE_NUMBER - 1) / 10) * 10
            WHEN ROWNUM = 1 THEN NULL
            WHEN ROWNUM = total_pages + 2 THEN FLOOR((:P_PAGE_NUMBER - 1) / 10) * 10 + 11
            ELSE ROWNUM - 1
        END AS target_page
    FROM dual
    CONNECT BY LEVEL <= (SELECT total_pages FROM total_paginas) + 2
),
rango_paginas AS (
    SELECT
        button_label,
        target_page
    FROM paginacion_data
    WHERE
        (
            button_label = 'Anterior' OR button_label = 'Siguiente'
        ) OR (
            button_label IS NOT NULL AND
            target_page BETWEEN (FLOOR((:P_PAGE_NUMBER - 1) / 10) * 10 + 1) AND LEAST((FLOOR((:P_PAGE_NUMBER - 1) / 10) * 10) + 10, (SELECT total_pages FROM total_paginas))
        )
)
SELECT
    CASE
        WHEN target_page IS NULL THEN NULL
        WHEN button_label = TO_CHAR(:P_PAGE_NUMBER) THEN '<span class="current-page">' || button_label || '</span>'
        ELSE '<a href="' || APEX_UTIL.PREPARE_URL(
            p_url => 'f?p=' || :APP_ID || ':' || :APP_PAGE_ID || ':' || :APP_SESSION || '::NO::P' || :APP_PAGE_ID || '_PAGE_NUMBER:' || target_page
        ) || '" class="pagination-link">' || button_label || '</a>'
    END AS paginacion_link
FROM rango_paginas;
