DECLARE
  l_clob              CLOB;
  l_configuracion     CO.TREGISTRO_CONFIGURACION;
  l_usuarios          CO.TBLID;
BEGIN
  -- 1. Obtener el CLOB del JSON enviado por la función JavaScript
  l_clob := APEX_APPLICATION.G_CLOB_01; -- O la variable adecuada que contenga el JSON

  -- 2. Parsear el JSON. Al ser un array, APEX lo maneja automáticamente.
  APEX_JSON.PARSE(p_source => l_clob);
  
  -- 3. Iterar sobre el array JSON (el primer nivel es el array)
  FOR i IN 1 .. APEX_JSON.GET_COUNT('.') -- El '.' se refiere al nivel raíz del JSON
  LOOP
    -- 4. Crear el objeto TREGISTRO_CONFIGURACION para cada elemento del array
    l_configuracion := CO.TREGISTRO_CONFIGURACION(
      aID             => APEX_JSON.GET_NUMBER(p_path => '[' || i || '].aID'),
      aNOMBRE         => APEX_JSON.GET_VARCHAR2(p_path => '[' || i || '].aNOMBRE'),
      aDESCRIPCION    => APEX_JSON.GET_VARCHAR2(p_path => '[' || i || '].aDESCRIPCION'),
      aTIPO           => APEX_JSON.GET_NUMBER(p_path => '[' || i || '].aTIPO'),
      aVALOR          => APEX_JSON.GET_NUMBER(p_path => '[' || i || '].aVALOR'),
      aSTART_HORA     => APEX_JSON.GET_NUMBER(p_path => '[' || i || '].aSTART_HORA'),
      aSTART_MINUTO   => APEX_JSON.GET_NUMBER(p_path => '[' || i || '].aSTART_MINUTO'),
      aFINISH_HORA    => APEX_JSON.GET_NUMBER(p_path => '[' || i || '].aFINISH_HORA'),
      aFINISH_MINUTO  => APEX_JSON.GET_NUMBER(p_path => '[' || i || '].aFINISH_MINUTO'),
      aUSUARIOS       => NULL, -- Se asigna en el siguiente paso
      aDIA_SEMANA     => APEX_JSON.GET_NUMBER(p_path => '[' || i || '].aDIA_SEMANA')
    );

    -- 5. Procesar el array de usuarios para el objeto actual
    l_usuarios := CO.TBLID();
    FOR j IN 1 .. APEX_JSON.GET_COUNT(p_path => '[' || i || '].aUSUARIOS')
    LOOP
      l_usuarios.EXTEND;
      l_usuarios(j) := APEX_JSON.GET_NUMBER(p_path => '[' || i || '].aUSUARIOS[' || j || ']');
    END LOOP;
    l_configuracion.aUSUARIOS := l_usuarios;

    -- 6. Invocar el SP con el objeto como parámetro para cada elemento
    YOUR_SP_NAME(
      p_configuracion => l_configuracion
    );
  END LOOP;

EXCEPTION
  WHEN OTHERS THEN
    -- Maneja cualquier error que pueda ocurrir durante el proceso
    RAISE;
END;



// Array de objetos de configuración
const configsData = [
  {
    aID: 1,
    aNOMBRE: 'Configuracion 1',
    aDESCRIPCION: 'Descripción 1',
    aTIPO: 1,
    aVALOR: 5,
    aSTART_HORA: 9,
    aSTART_MINUTO: 0,
    aFINISH_HORA: 17,
    aFINISH_MINUTO: 30,
    aUSUARIOS: [101, 102],
    aDIA_SEMANA: 3
  },
  {
    aID: 2,
    aNOMBRE: 'Configuracion 2',
    aDESCRIPCION: 'Descripción 2',
    aTIPO: 2,
    aVALOR: 10,
    aSTART_HORA: 10,
    aSTART_MINUTO: 0,
    aFINISH_HORA: 18,
    aFINISH_MINUTO: 0,
    aUSUARIOS: [103, 104],
    aDIA_SEMANA: 4
  }
];

// Reemplaza 'YOUR_PROCESS_NAME' con el nombre de tu proceso de APEX
apex.server.process(
  'YOUR_PROCESS_NAME',
  {
    p_clob_01: JSON.stringify(configsData) // Envía el array de JSON como un CLOB
  },
  {
    success: function(pData) {
      console.log('Proceso ejecutado con éxito');
    },
    error: function(pData) {
      console.error('Error al ejecutar el proceso');
    }
  }
);